version: '3.8'

services:
  mongodb:
    container_name: 'meme-mongodb'
    image: mongo:7.0-jammy
    restart: always
    env_file:
      - .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: 'redis:7.2-alpine'
    restart: always
    container_name: meme-redis
    command: redis-server --appendonly yes
    ports:
      - ${REDIS_PORT}:6379
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
  #   container_name: elasticsearch
  #   environment:
  #     - discovery.type=single-node
  #     - xpack.security.enabled=false
  #     - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
  #   ports:
  #     - '9200:9200'
  #   volumes:
  #     - esdata:/usr/share/elasticsearch/data
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:9200"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 5

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:8.12.1
  #   container_name: kibana
  #   ports:
  #     - '5601:5601'
  #   environment:
  #     - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  #   depends_on:
  #     elasticsearch:
  #       condition: service_healthy

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  # esdata:
  #   driver: local

networks:
  default:
    driver: bridge
